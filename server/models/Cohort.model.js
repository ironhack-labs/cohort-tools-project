const mongoose = require("mongoose");
const Schema = mongoose.Schema;

/**
 *@swagger
 * components:
 *   schemas:
 *     cohort:
 *       type: object
 *       required:
 *         - cohortSlug
 *         - cohortName
 *         - programManager
 *         - leadTeacher
 *       properties:
 *         _id:
 *           type: string
 *           format: uuid
 *           description: The autogenerated unique ID of this cohort
 *         inProgress:
 *           type: boolean
 *           default: false
 *           description: Indicates whether this cohort is currently active
 *         format:
 *           type: string
 *           enum: ["Full Time", "Part Time"]
 *           description: Format of the cohort
 *         cohortSlug:
 *           type: string
 *           pattern: '/^\w{2}-\w{2}-\w+-\d{4}-\d{2}-\d{2}$/'
 *           example: ft-wd-paris-2023-07-03
 *           description: The slug for this cohort in the format `{type}-{program}-{campus}-{start year}-{start month}-{start day}`
 *         cohortName:
 *           type: string
 *           pattern: '/^[A-Z]{2}\s{1}[A-Z]{2}\s{1}[A-Z]+\s{1}\d{4}\s{1}\d{2}$/'
 *           example: FT WD PARIS 2023 07
 *           description: The human-readable short ID for this cohort in the format `{TYPE} {PROGRAM} {CAMPUS} {start year} {start month}`
 *         program:
 *           type: string
 *           enum: ["Web Dev", "UI/UX","Data Analytics", "Cybersecurity"]
 *           description: The program of study for this cohort
 *         campus:
 *           type: string
 *           description: The location this cohort will be based in
 *         startDate:
 *           type: string
 *           format: date-time
 *           description: The start date for this cohort
 *         endDate:
 *           type: string
 *           format: date-time
 *           description: The end date for this cohort
 *         programManager:
 *           type: string
 *           description: The program manager who will be taking care of this cohort
 *         leadTeacher:
 *           type: string
 *           description: The teacher who will leading instruction for this cohort
 *         totalHours:
 *           type: integer
 *           description: The total number of hours this cohort will spend in class
 *       example:
 *         "_id": 4
 *         "cohortSlug": "pt-cy-paris-2023-04-03"
 *         "cohortName": "PT CY PARIS 2023 04"
 *         "program": "Cybersecurity"
 *         "format": "Part Time"
 *         "campus": "Paris"
 *         "startDate": "2023-04-03T00:00:00.000Z"
 *         "endDate": "2023-10-03T00:00:00.000Z"
 *         "inProgress": false
 *         "programManager": "Eva Edwards"
 *         "leadTeacher": "Frank Foster"
 *         "totalHours": 360
 */
const cohortSchema = new Schema({
	cohortSlug: { type: String, required: true },
	cohortName: { type: String, required: true },
	program: {
		type: String,
		enum: ["Web Dev", "UX/UI", "Data Analytics", "Cybersecurity"],
	},
	format: { type: String, enum: ["Full Time", "Part Time"] },
	campus: {
		type: String,
		enum: [
			"Madrid",
			"Barcelona",
			"Miami",
			"Paris",
			"Berlin",
			"Amsterdam",
			"Lisbon",
			"Remote",
		],
	},
	startDate: { type: Date, default: Date.now },
	endDate: { type: Date },
	inProgress: { type: Boolean, default: false },
	programManager: { type: String, required: true },
	leadTeacher: { type: String, required: true },
	totalHours: { type: Number, default: 360 },
});

const Cohort = mongoose.model("Cohort", cohortSchema);

module.exports = Cohort;
